// link: https://www.programiz.com/dsa/quick-sort

export const partition = {
    "link":"https://www.geeksforgeeks.org/quick-sort/",
    "Python": ["def partition(array, low, high):\n",
        "  pivot = array[high]\n",
        "  i = low - 1\n",
        "  for j in range(low, high):\n",
        "    if array[j] <= pivot:\n",
        "      i = i + 1\n",
        "      (array[i], array[j]) = (array[j], array[i])\n",
        "  (array[i + 1], array[high]) = (array[high], array[i + 1])\n",
        "  return i + 1"],
    "Java": ["static int partition(int array[], int low, int high) {\n",
        "    int pivot = array[high];",
        "    int i = low - 1;\n",
        "    for (int j = low; j < high; j++) {\n",
        "      if (array[j] <= pivot) {\n",
        "        i++;\n",
        "        int temp = array[i];\n",
        "        array[i] = array[j];\n",
        "        array[j] = temp;\n",
        "      }\n",
        "    }\n",
        "    int temp = array[i + 1];\n",
        "    array[i + 1] = array[high];\n",
        "    array[high] = temp;\n",
        "    return (i + 1);\n",
        "}"],
    "C++": ["int partition(int& array[], int low, int high) {\n",
        "    int pivot = array[high];\n",
        "    int i = low - 1;\n",
        "    for (int j = low; j < high; j++) {\n",
        "        i++;\n",
        "        int temp = array[i];\n",
        "        array[i] = array[j];\n",
        "        array[j] = temp;\n",
        "      }\n",
        "    }\n",
        "    int temp = array[i + 1];\n",
        "    array[i + 1] = array[high];\n",
        "    array[high] = temp;\n",
        "    return (i + 1);\n",
        "}"],
    "JavaScript": ["function partition(items, left, right) {\n",
        "    var pivot = items[Math.floor((right + left) / 2)];\n",
        "    i = left;\n",
        "    j = right;\n",
        "    while (i <= j) {\n",
        "        while (items[i] < pivot) {\n",
        "            i++;\n",
        "        }\n",
        "        while (items[j] > pivot) {\n",
        "            j--;\n",
        "        }\n",
        "        if (i <= j) {\n",
        "            swap(items, i, j)\n",
        "            i++;\n",
        "            j--;\n",
        "        }\n",
        "    }\n",
        "    return i;\n",
        "}"]
}

export const quicksort = {
    "link":"https://www.geeksforgeeks.org/quick-sort/",
    "Python": ["def quickSort(array, low, high):\n",
        "  if low < high:\n",
        "    pi = partition(array, low, high)\n",
        "    quickSort(array, low, pi - 1)\n",
        "    quickSort(array, pi + 1, high)"],
    "Java": ["static void quickSort(int array[], int low, int high) {\n",
        "    if (low < high) {\n",
        "      int pi = partition(array, low, high);\n",
        "      quickSort(array, low, pi - 1);\n",
        "      quickSort(array, pi + 1, high);\n",
        "    }\n",
        "}"],
    "C++": ["void quickSort(int& array[], int low, int high) {\n",
        "    if (low < high) {\n",
        "      int pi = partition(array, low, high);\n",
        "      quickSort(array, low, pi - 1);\n",
        "      quickSort(array, pi + 1, high);\n",
        "    }\n",
        "}"],
    "JavaScript": ["function quickSort(items, left, right) {\n",
        "    var index;\n",
        "    if (items.length > 1) {\n",
        "        index = partition(items, left, right);\n",
        "        if (left < index - 1) {\n",
        "            quickSort(items, left, index - 1);\n",
        "        }\n",
        "        if (index < right) {\n",
        "            quickSort(items, index, right);\n",
        "        }\n",
        "    }\n",
        "    return items;\n",
        "}"]
}
